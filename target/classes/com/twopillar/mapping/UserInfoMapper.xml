<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.twopillar.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.twopillar.entity.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="portrait" property="portrait" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="is_vip" property="isVip" jdbcType="BIT" />
    <result column="level" property="level" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, portrait, nick_name, gender, phone, password, is_vip, level
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.twopillar.entity.UserInfo" >
    insert into user_info (id, portrait, nick_name, 
      gender, phone, password, 
      is_vip, level)
    values (#{id,jdbcType=INTEGER}, #{portrait,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{phone,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{isVip,jdbcType=BIT}, #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.twopillar.entity.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="portrait != null" >
        portrait,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="isVip != null" >
        is_vip,
      </if>
      <if test="level != null" >
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="portrait != null" >
        #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isVip != null" >
        #{isVip,jdbcType=BIT},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.twopillar.entity.UserInfo" >
    update user_info
    <set >
      <if test="portrait != null" >
        portrait = #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isVip != null" >
        is_vip = #{isVip,jdbcType=BIT},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.twopillar.entity.UserInfo" >
    update user_info
    set portrait = #{portrait,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      is_vip = #{isVip,jdbcType=BIT},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>